apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: traffic-tacos
  namespace: argocd
  labels:
    app.kubernetes.io/name: traffic-tacos-project
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: project
    app.kubernetes.io/managed-by: gitops
    platform: traffic-tacos
    cost-center: platform
    team: platform-engineering
  annotations:
    argocd.argoproj.io/sync-wave: "1"  # Deploy before applications
    project.argoproj.io/description: "Traffic Tacos microservices platform deployment project"
spec:
  description: "Traffic Tacos microservices platform - 30k RPS ticket reservation system"

  # Source repositories allowed for this project
  sourceRepos:
    # Main Traffic Tacos organization repositories
    - 'https://github.com/traffic-tacos/*'

    # Additional Helm chart repositories
    - 'https://charts.helm.sh/stable'
    - 'https://kubernetes-sigs.github.io/gateway-api'
    - 'https://kedacore.github.io/charts'
    - 'https://prometheus-community.github.io/helm-charts'

    # Private repositories (if any)
    - 'ssh://git@github.com/traffic-tacos/*'

  # Allowed destinations (clusters and namespaces)
  destinations:
    # Gateway namespace for ingress and routing
    - namespace: gateway
      server: https://kubernetes.default.svc
      name: in-cluster

    # Main application namespace
    - namespace: tacos
      server: https://kubernetes.default.svc
      name: in-cluster

    # Monitoring namespace (if applications need to deploy monitoring resources)
    - namespace: monitoring
      server: https://kubernetes.default.svc
      name: in-cluster

    # Allow creation of additional namespaces with traffic-tacos prefix
    - namespace: 'traffic-tacos-*'
      server: https://kubernetes.default.svc
      name: in-cluster

  # Allowed cluster-scoped resources
  clusterResourceWhitelist:
    # Core Kubernetes resources
    - group: ''
      kind: Namespace

    # RBAC resources
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRole
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRoleBinding

    # Networking resources
    - group: 'networking.k8s.io'
      kind: IngressClass
    - group: 'networking.k8s.io'
      kind: NetworkPolicy

    # Custom Resource Definitions
    - group: 'apiextensions.k8s.io'
      kind: CustomResourceDefinition

    # Certificate management
    - group: 'cert-manager.io'
      kind: ClusterIssuer

    # Service mesh (if using Istio)
    - group: 'security.istio.io'
      kind: AuthorizationPolicy
    - group: 'networking.istio.io'
      kind: Gateway
    - group: 'networking.istio.io'
      kind: VirtualService

  # Allowed namespace-scoped resources
  namespaceResourceWhitelist:
    # Core Kubernetes resources
    - group: ''
      kind: '*'

    # Apps resources
    - group: 'apps'
      kind: '*'

    # Networking resources
    - group: 'networking.k8s.io'
      kind: '*'

    # Auto-scaling resources
    - group: 'autoscaling'
      kind: '*'

    # Policy resources
    - group: 'policy'
      kind: '*'

    # KEDA resources for event-driven scaling
    - group: 'keda.sh'
      kind: '*'

    # Gateway API resources
    - group: 'gateway.networking.k8s.io'
      kind: '*'

    # Service mesh resources
    - group: 'networking.istio.io'
      kind: '*'
    - group: 'security.istio.io'
      kind: '*'

    # Monitoring resources
    - group: 'monitoring.coreos.com'
      kind: '*'

    # Certificate management
    - group: 'cert-manager.io'
      kind: '*'

    # External secrets
    - group: 'external-secrets.io'
      kind: '*'

  # RBAC roles for the project
  roles:
    # Development Team Role
    - name: dev-team
      description: "Development team with full application lifecycle management"
      policies:
        # Application management
        - 'p, proj:traffic-tacos:dev-team, applications, create, traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:dev-team, applications, get, traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:dev-team, applications, update, traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:dev-team, applications, delete, traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:dev-team, applications, sync, traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:dev-team, applications, action/*, traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:dev-team, applications, override, traffic-tacos/*, allow'

        # Repository access
        - 'p, proj:traffic-tacos:dev-team, repositories, get, https://github.com/traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:dev-team, repositories, create, https://github.com/traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:dev-team, repositories, update, https://github.com/traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:dev-team, repositories, delete, https://github.com/traffic-tacos/*, allow'

        # Logs and debugging
        - 'p, proj:traffic-tacos:dev-team, logs, get, traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:dev-team, exec, create, traffic-tacos/*, allow'

      groups:
        - traffic-tacos:developers
        - traffic-tacos:frontend-team
        - traffic-tacos:backend-team

      jwtTokens:
        - iat: 1727193600  # 2024-09-25 00:00:00 UTC
          exp: 1758729600   # 2025-09-25 00:00:00 UTC (1 year validity)

    # Operations Team Role
    - name: ops-team
      description: "Operations team with monitoring, troubleshooting and deployment oversight"
      policies:
        # Read access to all applications
        - 'p, proj:traffic-tacos:ops-team, applications, get, */*, allow'
        - 'p, proj:traffic-tacos:ops-team, applications, sync, traffic-tacos/*, allow'

        # Repository read access
        - 'p, proj:traffic-tacos:ops-team, repositories, get, */*, allow'

        # Full logging and debugging access
        - 'p, proj:traffic-tacos:ops-team, logs, get, traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:ops-team, exec, create, traffic-tacos/*, allow'

        # Emergency actions
        - 'p, proj:traffic-tacos:ops-team, applications, action/*, traffic-tacos/*, allow'

        # Project management
        - 'p, proj:traffic-tacos:ops-team, projects, get, traffic-tacos, allow'

      groups:
        - traffic-tacos:operations
        - traffic-tacos:sre

      jwtTokens:
        - iat: 1727193600
          exp: 1758729600

    # Platform Team Role (Full Admin)
    - name: platform-admin
      description: "Platform team with full administrative access"
      policies:
        # Full application access
        - 'p, proj:traffic-tacos:platform-admin, applications, *, traffic-tacos/*, allow'

        # Full repository access
        - 'p, proj:traffic-tacos:platform-admin, repositories, *, */*, allow'

        # Project management
        - 'p, proj:traffic-tacos:platform-admin, projects, *, traffic-tacos, allow'

        # Full access to logs and debugging
        - 'p, proj:traffic-tacos:platform-admin, logs, get, traffic-tacos/*, allow'
        - 'p, proj:traffic-tacos:platform-admin, exec, create, traffic-tacos/*, allow'

      groups:
        - traffic-tacos:platform-team
        - traffic-tacos:admin

      jwtTokens:
        - iat: 1727193600
          exp: 1758729600

    # Read-only Team Role
    - name: viewer
      description: "Read-only access for stakeholders and observers"
      policies:
        # View applications
        - 'p, proj:traffic-tacos:viewer, applications, get, traffic-tacos/*, allow'

        # View repositories
        - 'p, proj:traffic-tacos:viewer, repositories, get, https://github.com/traffic-tacos/*, allow'

        # View project
        - 'p, proj:traffic-tacos:viewer, projects, get, traffic-tacos, allow'

      groups:
        - traffic-tacos:viewers
        - traffic-tacos:stakeholders

      jwtTokens:
        - iat: 1727193600
          exp: 1758729600

  # Sync windows for controlled deployment times
  syncWindows:
    # Business hours deployment window
    - kind: allow
      schedule: '0 9-17 * * MON-FRI'  # 9 AM to 5 PM KST, Monday to Friday
      duration: 8h
      applications:
        - '*'
      manualSync: true
      timeZone: 'Asia/Seoul'

    # Emergency deployment window (24/7 for manual sync)
    - kind: allow
      schedule: '* * * * *'  # Always allow manual syncs
      duration: 1h
      applications:
        - '*'
      manualSync: true
      timeZone: 'Asia/Seoul'

    # Block automated deployments during off-hours
    - kind: deny
      schedule: '0 18-8 * * *'  # 6 PM to 8 AM KST
      duration: 14h
      applications:
        - '*'
      manualSync: false  # Still allow manual syncs
      timeZone: 'Asia/Seoul'

    # Block deployments on weekends (automated only)
    - kind: deny
      schedule: '* * * * SAT,SUN'  # Weekends
      duration: 24h
      applications:
        - '*'
      manualSync: false
      timeZone: 'Asia/Seoul'

  # Orphaned resources handling
  orphanedResources:
    warn: true
    ignore:
      - group: ''
        kind: Secret
        name: '*-token-*'  # Ignore service account tokens
      - group: ''
        kind: ConfigMap
        name: 'kube-root-ca.crt'  # Ignore auto-generated CA ConfigMaps

  # Signature keys for commit signature verification (optional)
  signatureKeys:
    - keyID: 'traffic-tacos-signing-key-2024'

  # Git repository settings
  sourceNamespaces:
    - argocd

---
# Default project for system applications (if needed)
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: system
  namespace: argocd
  labels:
    app.kubernetes.io/name: system-project
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: project
    app.kubernetes.io/managed-by: gitops
spec:
  description: "System-level applications (monitoring, logging, etc.)"

  sourceRepos:
    - 'https://prometheus-community.github.io/helm-charts'
    - 'https://grafana.github.io/helm-charts'
    - 'https://charts.elastic.co'
    - 'https://kubernetes-sigs.github.io/*'

  destinations:
    - namespace: monitoring
      server: https://kubernetes.default.svc
    - namespace: logging
      server: https://kubernetes.default.svc
    - namespace: kube-system
      server: https://kubernetes.default.svc

  clusterResourceWhitelist:
    - group: '*'
      kind: '*'

  namespaceResourceWhitelist:
    - group: '*'
      kind: '*'

  roles:
    - name: platform-admin
      description: "Platform administrators"
      policies:
        - 'p, proj:system:platform-admin, applications, *, system/*, allow'
      groups:
        - traffic-tacos:platform-team