apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-server-ingress
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: kubectl
    platform: traffic-tacos
    cost-center: platform
    team: platform-engineering
  annotations:
    # AWS Load Balancer Controller annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01

    # Certificate ARN - to be updated during deployment
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:ACCOUNT-ID:certificate/CERT-ID

    # SSL and HTTPS configuration
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'

    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'

    # Load balancer attributes
    alb.ingress.kubernetes.io/load-balancer-name: argocd-alb-prod
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      idle_timeout.timeout_seconds=300,
      routing.http2.enabled=true,
      access_logs.s3.enabled=true,
      access_logs.s3.bucket=traffic-tacos-alb-logs,
      access_logs.s3.prefix=argocd-alb

    # Security headers
    alb.ingress.kubernetes.io/actions.ssl-redirect: |
      {
        "Type": "redirect",
        "RedirectConfig": {
          "Protocol": "HTTPS",
          "Port": "443",
          "StatusCode": "HTTP_301"
        }
      }

    # Additional security configurations
    alb.ingress.kubernetes.io/security-groups: |
      sg-argocd-alb

    # WAF association (optional)
    # alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:ap-northeast-2:ACCOUNT-ID:regional/webacl/argocd-waf/WAF-ID

    # Cost tracking
    alb.ingress.kubernetes.io/tags: |
      Environment=production,
      Platform=traffic-tacos,
      CostCenter=platform,
      Team=platform-engineering,
      Component=argocd,
      ManagedBy=kubernetes

spec:
  ingressClassName: alb

  tls:
  - hosts:
    - argocd.traffictacos.com
    secretName: argocd-server-tls

  rules:
  - host: argocd.traffictacos.com
    http:
      paths:
      # SSL redirect for HTTP traffic
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ssl-redirect
            port:
              name: use-annotation
      # HTTPS traffic to ArgoCD server
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 443

---
# Additional ingress for gRPC-Web (if needed for CLI access)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-grpc-ingress
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-server-grpc-ingress
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: kubectl
    platform: traffic-tacos
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: GRPC
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    # Use same certificate as main ingress
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:ACCOUNT-ID:certificate/CERT-ID
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/load-balancer-name: argocd-grpc-alb-prod

spec:
  ingressClassName: alb

  tls:
  - hosts:
    - argocd-grpc.traffictacos.com
    secretName: argocd-server-grpc-tls

  rules:
  - host: argocd-grpc.traffictacos.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 443

---
# Service for SSL redirect action
apiVersion: v1
kind: Service
metadata:
  name: ssl-redirect
  namespace: argocd
  labels:
    app.kubernetes.io/name: ssl-redirect
    app.kubernetes.io/part-of: argocd
  annotations:
    # This service is used by ALB for SSL redirect action
    alb.ingress.kubernetes.io/actions.ssl-redirect: |
      {
        "Type": "redirect",
        "RedirectConfig": {
          "Protocol": "HTTPS",
          "Port": "443",
          "StatusCode": "HTTP_301"
        }
      }
spec:
  type: ClusterIP
  ports:
  - name: use-annotation
    port: 80
    protocol: TCP
    targetPort: 80
  # No selector - this is a virtual service for ALB actions