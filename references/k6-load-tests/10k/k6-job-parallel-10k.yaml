---
# Job 1/3: 3.3k RPS
apiVersion: batch/v1
kind: Job
metadata:
  name: k6-loadtest-10k-part1
  namespace: load-test
  labels:
    app: k6
    test: 10k-distributed
    part: "1"
spec:
  ttlSecondsAfterFinished: 3600  # 1시간 후 자동 삭제
  backoffLimit: 0  # 실패 시 재시도 안함
  template:
    metadata:
      labels:
        app: k6
        test: 10k-distributed
        part: "1"
    spec:
      restartPolicy: Never
      serviceAccountName: k6-runner
      nodeSelector:
        workload-type: loadtest
      tolerations:
        - effect: NoSchedule
          key: workload
          operator: Equal
          value: loadtest
      volumes:
        - name: aws-iam-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: sts.amazonaws.com
                expirationSeconds: 86400
                path: token
        - name: k6-test-volume
          configMap:
            name: k6-script-10k-part1
      containers:
        - name: k6
          image: grafana/k6:latest
          command: ["k6"]
          args:
            - "run"
            - "/test/script.js"
          ports:
            - containerPort: 6565
          volumeMounts:
            - mountPath: /test
              name: k6-test-volume
              readOnly: true
          env:
            - name: TARGET_BASE_URL
              value: "https://api.traffictacos.store"
            - name: K6_OUT
              value: experimental-prometheus-rw
            - name: K6_PROMETHEUS_RW_SERVER_URL
              value: http://localhost:8005/workspaces/ws-ec1155d6-1ea8-4822-b9e9-fdec9424dcb9/api/v1/remote_write
            - name: K6_PROMETHEUS_RW_TREND_STATS
              value: "p(90),p(95),p(99),max,min,avg,med"
            - name: K6_PROMETHEUS_RW_TAGS
              value: "testid,tags,scenario,url,method,status,part"
            - name: K6_PROMETHEUS_RW_PUSH_INTERVAL
              value: "15s"
            - name: PART_ID
              value: "1"
          resources:
            requests:
              cpu: "1500m"
              memory: "3Gi"
            limits:
              cpu: "2000m"
              memory: "4Gi"
        - name: aws-sigv4-proxy
          image: public.ecr.aws/aws-observability/aws-sigv4-proxy:latest
          args:
            - "--name=aps"
            - "--region=ap-northeast-2"
            - "--host=aps-workspaces.ap-northeast-2.amazonaws.com"
            - "--port=:8005"
          volumeMounts:
          - name: aws-iam-token
            mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
            readOnly: true
          ports:
            - containerPort: 8005
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# Job 2/3: 3.3k RPS
apiVersion: batch/v1
kind: Job
metadata:
  name: k6-loadtest-10k-part2
  namespace: load-test
  labels:
    app: k6
    test: 10k-distributed
    part: "2"
spec:
  ttlSecondsAfterFinished: 3600
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: k6
        test: 10k-distributed
        part: "2"
    spec:
      restartPolicy: Never
      serviceAccountName: k6-runner
      nodeSelector:
        workload-type: loadtest
      tolerations:
        - effect: NoSchedule
          key: workload
          operator: Equal
          value: loadtest
      volumes:
        - name: aws-iam-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: sts.amazonaws.com
                expirationSeconds: 86400
                path: token
        - name: k6-test-volume
          configMap:
            name: k6-script-10k-part2
      containers:
        - name: k6
          image: grafana/k6:latest
          command: ["k6"]
          args:
            - "run"
            - "/test/script.js"
          ports:
            - containerPort: 6565
          volumeMounts:
            - mountPath: /test
              name: k6-test-volume
              readOnly: true
          env:
            - name: TARGET_BASE_URL
              value: "https://api.traffictacos.store"
            - name: K6_OUT
              value: experimental-prometheus-rw
            - name: K6_PROMETHEUS_RW_SERVER_URL
              value: http://localhost:8005/workspaces/ws-ec1155d6-1ea8-4822-b9e9-fdec9424dcb9/api/v1/remote_write
            - name: K6_PROMETHEUS_RW_TREND_STATS
              value: "p(90),p(95),p(99),max,min,avg,med"
            - name: K6_PROMETHEUS_RW_TAGS
              value: "testid,tags,scenario,url,method,status,part"
            - name: K6_PROMETHEUS_RW_PUSH_INTERVAL
              value: "15s"
            - name: PART_ID
              value: "2"
          resources:
            requests:
              cpu: "1500m"
              memory: "3Gi"
            limits:
              cpu: "2000m"
              memory: "4Gi"
        - name: aws-sigv4-proxy
          image: public.ecr.aws/aws-observability/aws-sigv4-proxy:latest
          args:
            - "--name=aps"
            - "--region=ap-northeast-2"
            - "--host=aps-workspaces.ap-northeast-2.amazonaws.com"
            - "--port=:8005"
          volumeMounts:
          - name: aws-iam-token
            mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
            readOnly: true
          ports:
            - containerPort: 8005
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# Job 3/3: 3.4k RPS (나머지)
apiVersion: batch/v1
kind: Job
metadata:
  name: k6-loadtest-10k-part3
  namespace: load-test
  labels:
    app: k6
    test: 10k-distributed
    part: "3"
spec:
  ttlSecondsAfterFinished: 3600
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: k6
        test: 10k-distributed
        part: "3"
    spec:
      restartPolicy: Never
      serviceAccountName: k6-runner
      nodeSelector:
        workload-type: loadtest
      tolerations:
        - effect: NoSchedule
          key: workload
          operator: Equal
          value: loadtest
      volumes:
        - name: aws-iam-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: sts.amazonaws.com
                expirationSeconds: 86400
                path: token
        - name: k6-test-volume
          configMap:
            name: k6-script-10k-part3
      containers:
        - name: k6
          image: grafana/k6:latest
          command: ["k6"]
          args:
            - "run"
            - "/test/script.js"
          ports:
            - containerPort: 6565
          volumeMounts:
            - mountPath: /test
              name: k6-test-volume
              readOnly: true
          env:
            - name: TARGET_BASE_URL
              value: "https://api.traffictacos.store"
            - name: K6_OUT
              value: experimental-prometheus-rw
            - name: K6_PROMETHEUS_RW_SERVER_URL
              value: http://localhost:8005/workspaces/ws-ec1155d6-1ea8-4822-b9e9-fdec9424dcb9/api/v1/remote_write
            - name: K6_PROMETHEUS_RW_TREND_STATS
              value: "p(90),p(95),p(99),max,min,avg,med"
            - name: K6_PROMETHEUS_RW_TAGS
              value: "testid,tags,scenario,url,method,status,part"
            - name: K6_PROMETHEUS_RW_PUSH_INTERVAL
              value: "15s"
            - name: PART_ID
              value: "3"
          resources:
            requests:
              cpu: "1500m"
              memory: "3Gi"
            limits:
              cpu: "2000m"
              memory: "4Gi"
        - name: aws-sigv4-proxy
          image: public.ecr.aws/aws-observability/aws-sigv4-proxy:latest
          args:
            - "--name=aps"
            - "--region=ap-northeast-2"
            - "--host=aps-workspaces.ap-northeast-2.amazonaws.com"
            - "--port=:8005"
          volumeMounts:
          - name: aws-iam-token
            mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
            readOnly: true
          ports:
            - containerPort: 8005
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
